<template>
    <span class="countUp" ref="c1" :style="cusStyle">
        {{end}}{{options.suffix}}
    </span>
</template>

<script>
    export default {
        name: 'countUp',
        data() {
            return {
                start: 0,
                oldEndNumber: 0,
            }
        },
        created() {
            this.oldEndNumber = this.end
            this.countUp(this.options.startVal, this.end)
            this.options.startVal !== this.end && (this.options.startVal = this.end)
        },
        mounted() {
        },
        updated() {
            if(this.oldEndNumber == this.end) {
                // console.log('end未改变');
                return
            }
            this.countUp(this.options.startVal, this.end)
            this.options.startVal !== this.end && (this.options.startVal = this.end)
        },
        methods: {
            countUp(numStart, numEnd) {
                numStart = parseFloat(numStart)
                numEnd = parseFloat(numEnd)
                let s = numEnd - numStart; //滚动区间  0 - 15
                let subtraction = s < 0 ? true : false;// 标识是否减法

                let t = 0; //滚动时间
                if (Math.abs(s) < 10) {
                    t = 1500;
                } else if (Math.abs(s) < 100) {
                    t = 2000;
                } else {
                    t = 2500;
                }
                let itvTime = 70; // 定时器执行间隔
                let increment = s / (t / itvTime); // 每次要加的量

                let suffix = this.options.suffix || ''
                let itv = setInterval(() => {
                    if(subtraction) {//减法
                        if (numStart <= numEnd) {
                            clearInterval(itv);
                            return;
                        }
                        numStart += increment;
                        let displayNum = Math.ceil(numStart);
                        if(displayNum < numEnd) {
                            displayNum = numEnd
                        }
                        this.$refs.c1.innerText = displayNum + suffix;
                    }else {//加法
                        if (numStart >= numEnd) {
                            clearInterval(itv);
                            return;
                        }
                        numStart += increment;
                        let displayNum = Math.floor(numStart);
                        if(displayNum > numEnd) {
                            displayNum = numEnd
                        }
                        this.$refs.c1.innerText = displayNum + suffix;
                    }
                }, itvTime);
            },
        },
        props: {
            end: {
                type: Number,
                default: 0,
            },
            name: {
                type: String,
                default: '',
            },
            options: {
                type: Object,
                default() {
                    return {}
                },
            },
            cusStyle: {
                type: Object,
                default() {
                    return {}
                },
            }
        }
        
    }
</script>

<style lang="less" scoped>
.countUp {
    text-shadow: 0 0 5px white,0 0 10px #5A75FF,0 0 15px #5A75FF,0 0 20px white;
}
</style>
