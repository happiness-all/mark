a文件下载
        if(res.status === 200 || res.status === 201) {
          let stream = res.data; // 后端用stream返回Excel文件
          let blob = new Blob([stream]);
          const downloadElement = document.createElement('a');
          const href = URL.createObjectURL(blob); // 创建下载的链接
          downloadElement.href = href;
          downloadElement.download = '网格信息表模板.xlsx'; // 下载后文件名
          document.body.appendChild(downloadElement);
          downloadElement.click(); // 点击下载
          document.body.removeChild(downloadElement); // 下载完成移除元素
          URL.revokeObjectURL(href); // 释放掉blob对象
        }else {
          this.$notify({
            title: '下载失败',
            type: 'error'
          });
        }
非特殊字符问题的正则表达式
export const nameChartReg = /^[-A-Za-z0-9_\u4e00-\u9fa5]*$/
其他下载文件的方法
let fileDownload = require("js-file-download");
 if (res.data.type == 'application/json') {
    var reader = new FileReader();
    reader.readAsText(res.data, 'utf-8')
    reader.onload = function (e) {
      window._xvueElementUI.Message({
        type: 'error',
        message: JSON.parse(reader.result).returnMessage,
      })
    }
  } else {
  //真正的下载文件的代码
    let content = res.headers['content-disposition']
    let fileName = content.split(";")[1]
    fileName = Base64.decode(fileName.substr(10, fileName.length))
    return fileDownload(res.data, fileName, '', undefined, onlyUrl)
  }
          
记得要修改请求中的一个属性
    // 下载所有文件
  downLoadAllFile(data) {
    return window._xvueAxios({
      method: 'post',
      url: BASE_URL+'/v1/grid/file/downLoadAllFile',
      data,
      responseType: 'blob'
    })
  }
