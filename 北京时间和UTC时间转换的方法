import dayjs from "dayjs";

/**
 * 对象数组arr按属性prop[属性值为number]升序排序
 * @param { Array } arr
 * @param { String } prop
 */
const objArrSort = (arr, prop) => {
  if (!arr || !Array.isArray(arr)) {
    return [];
  }
  if (arr.length <= 1) {
    return arr;
  }
  function compare(obj1, obj2) {
    var value1 = obj1[prop];
    var value2 = obj2[prop];
    return value1 - value2;
  }
  return arr.sort(compare);
};
// UTC时间和北京时间的转换
export function utcToCurrentTime(time, format) {
  if (!time) return time;
  let type = typeof time;
  if (type === "undefined") return "";
  if (type === "object") {
    let curTime = new Date();
    return format ? dayjs().format(format) : curTime;
  }
  let utcTime = 0;
  if (type === "number") {
    utcTime = time;
  } else {
    utcTime = dayjs(time).valueOf();
  }
  let localOffset = new Date().getTimezoneOffset() * 60000; //getTimezoneOffset()返回是以分钟为单位，需要转化成ms
  let localTime = utcTime - localOffset;
  let resTime = new Date(localTime);
  return format ? dayjs(localTime).format(format) : resTime;
}

export function currentTimeToUtc(time, format) {
  if (!time) return time;
  let localTime = dayjs(time).valueOf();
  let localOffset = new Date().getTimezoneOffset() * 60000; //getTimezoneOffset()返回是以分钟为单位，需要转化成ms
  let utc = localTime + localOffset;
  let resTime = new Date(utc);
  return format ? dayjs(utc).format(format) : new Date(localTime);
}

export {  objArrSort };
