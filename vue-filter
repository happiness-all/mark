定义过滤器
第一个参数是过滤器的名字
第二个参数是过滤器的功能函数 (若不定义vue就不知道这个字符串是什么，有什么作用)。

过滤器的功能函数

声明 function(data,argv1,argv2...){}
第一个参数是传入的要过滤的数据，即调用时管道符左边的内容。
第二个参数开始往后就是调用过滤器的时候传入的参数。
过滤器的使用
先注册，后使用
组件内 filters:{ 过滤器名: fn } fn 内通过 return 返回最终的数据
全局 Vue.filter('过滤器名',fn) fn 内通过 return 返回最终的数据
使用 {{ 数据 | 过滤器名 }}
// 使用过滤器时需要添加管道符号（ | ）作为分隔，管道符 | 右边是过滤器名称，即文本的功能函数
​
<!-- 在双花括号中 -->
{{ message | 过滤器名称 }}
​
<!-- 在 `v-bind` 中 -->
<div v-bind:id="id | 过滤器名称"></div>
自定义全局过滤器
Vue.filter('过滤器名称', function(val) { // val表示要被处理的数据
    // 过滤器业务逻辑，要有返回值
})
​
<div>{{ msg | 过滤器名称 }}</div>
<div v-bind="msg | 过滤器名称"></div>
局部过滤器
data () {
    return {
        msg: 'hello world'
    }
},
//定义私用局部过滤器。只能在当前 vue 对象中使用
filters: {
    dataFormat: (msg, a) => { // msg表示要过滤的数据，a表示传入的参数
        return msg + a;
    }
}
